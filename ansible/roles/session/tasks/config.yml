---
- name: "config : Config GAPI session type"
  include_tasks: "config_gapi.yml"
  when: 
    - libre_config.session.type == 'gapi'
    - (r_session_conf_details.stat.exists != true or libre_session is undefined)
- name: "config : Config sample session type"
  include_tasks: "config_sample.yml"
  when: 
    - libre_config.session.type == 'sample'
    - (r_session_conf_details.stat.exists != true or libre_session is undefined)
- name: "config : Config manual session type"
  include_tasks: "config_manual.yml"
  when: 
    - libre_config.session.type == 'manual'
    - (r_session_conf_details.stat.exists != true or libre_session is undefined)
- name: "config : Create ansible local facts links"
  file:
    state: link
    src: "{{ r_session_dir_conf }}/{{ r_session_config_file }}"
    dest: "{{ r_session_dir_facts }}/session.fact"
    mode: 0664
    owner: root
    group: root
  become: yes
  when: r_session_conflinks_details.stat.exists != true
- name: "config : Gathering fresh facts to get session configuration"
  setup:
  register: r_session_freshFacts
  when: libre_session is undefined
- name: "config : Check if local configuration are in fresh facts"
  fail: msg="Could not find local configuration in ansible_local facts. Check your config directory {{ r_session_dir_conf }} and {{ r_session_dir_facts }}"
  when:
    - libre_session is undefined
    - (r_session_freshFacts is undefined or r_session_freshFacts.ansible_facts is undefined or r_session_freshFacts.ansible_facts.ansible_local is undefined)
- name: "config : Check if session configuration is in fresh facts"
  fail: msg="Could not find session configuration {{ r_session_config_file }} in ansible_local facts"
  when:
    - libre_session is undefined
    - (r_session_freshFacts.ansible_facts.ansible_local.session is undefined or r_session_freshFacts.ansible_facts.ansible_local.session == "error loading fact - please check content")
- name: "config : Reload session file details from {{ r_session_dir_facts }} facts"
  stat:
    path: "{{ r_session_dir_facts }}/session.fact"
  when: libre_session is undefined
- name: "config : Reload session configuration facts from fresh facts"
  set_fact:
    libre_session: "{{ r_session_freshFacts.ansible_facts.ansible_local.session }}"
  when: libre_session is undefined
- name: "config : Log config action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "Session is configured"
    log_component: session
    log_action: config