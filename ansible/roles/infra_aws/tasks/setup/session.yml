---
- name: "setup : session : Session id exist"
  assert:
    msg: "Session id must be defined in {{ r_libre_config_file_session }}"
    that: "libre_session.id is defined"
- name: "setup : session : Session id exist"
  assert:
    msg: "Session course must be defined in {{ r_libre_config_file_session }}"
    that: "libre_session.course is defined"
    
- name: "setup : session : Configure AWS access key"
  pause:
   prompt: "What is your AWS Access key ({{ infra_aws_access_key|default('') }}) ?"
  register: aws_access_key
  when: infra_aws_access_key is undefined or force_setup
- name: "setup : session : Register session_id fact"
  set_fact: 
    infra_aws_access_key: "{{ aws_access_key.user_input }}"
  when: (infra_aws_access_key is undefined or force_setup) and aws_access_key.user_input is defined 
- name: "setup : session : Configure AWS access key"
  pause:
   prompt: "What is your AWS Access key ({{ infra_aws_secret_key|default('') }}) ?"
  register: aws_secret_key
  when: infra_aws_secret_key is undefined or force_setup
- name: "setup : session : Register session_id fact"
  set_fact: 
    infra_aws_secret_key: "{{ aws_secret_key.user_input }}"
  when: (infra_aws_secret_key is undefined or force_setup) and aws_secret_key.user_input is defined    
    
- name: "install_config : Get {{r_infra_aws_dir_conf}}/inventory-infra_aws.yml inventory file details"
  stat:
    path: "{{r_infra_aws_dir_conf}}/inventory-infra_aws.yml"
  register: r_infra_aws_inventoryinfra_details
- name: "setup : Generate base inventory infra-aws.yml into config directory {{r_infra_aws_dir_conf}}/inventory-infra_aws.yml"
  template:
    src: "../templates/inventory-infra.j2"
    dest: "{{r_infra_aws_dir_conf}}/inventory-infra_aws.yml"
    mode: 0664
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"
  become: yes
  when: r_infra_aws_inventoryinfra_details.stat.exists != true
